    //1 CALLBACK
    let A = 1;
    let B = 2;
    let C;
    let Z;
    let W;
    let callbackW = function(value) {
        console.log("finish W", value);
        W = value
        console.log("RESULT", A + B + C + Z + W);
    }
    let callbackZ = function(value) {
        console.log("finish Z", value);
        Z = value;
        getW(callbackW);
    }
    let callbackC = function(value) {
        console.log("finish C", value);
        C = value;
        getZ(callbackZ);
    }
    getC(callbackC);

    //2 PROMISE
    getC().then(function(value) {
        console.log(value);
        return getZ();
    }).then(function(value) {
        console.log(value);
        return getW();
    }).then(function(value) {
        console.log(value);
    })

    //3 ASYNC/AWAIT
    C = await getC();
    W = await getW();
    Z = await getZ();
    console.log("RESULT", A + B + C + Z + W);


//-------------------------------------------------------------------------------------
function getC() {
    return new Promise((resolve, reject) => {
        setTimeout(function() {
            resolve(1);
        }, 2000);
    })
}
function getZ() {
    return new Promise((resolve, reject) => {
        setTimeout(function() {
            resolve(2);
        }, 2000);
    })
}
function getW() {
    return new Promise((resolve, reject) => {
        setTimeout(function() {
            resolve(3);
        }, 2000);
    })
}